/* tslint:disable */
/* eslint-disable */
/**
 * Dexory API
 * Dexory platform api for warehouse tracking
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocationScan } from './LocationScan';
import {
    LocationScanFromJSON,
    LocationScanFromJSONTyped,
    LocationScanToJSON,
} from './LocationScan';

/**
 * 
 * @export
 * @interface MachineReportListInner
 */
export interface MachineReportListInner {
    /**
     * 
     * @type {string}
     * @memberof MachineReportListInner
     */
    reportName?: string;
    /**
     * A warehouse report generated by a machine, containing location information
     * @type {Array<LocationScan>}
     * @memberof MachineReportListInner
     */
    report?: Array<LocationScan>;
}

/**
 * Check if a given object implements the MachineReportListInner interface.
 */
export function instanceOfMachineReportListInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MachineReportListInnerFromJSON(json: any): MachineReportListInner {
    return MachineReportListInnerFromJSONTyped(json, false);
}

export function MachineReportListInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MachineReportListInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reportName': !exists(json, 'report_name') ? undefined : json['report_name'],
        'report': !exists(json, 'report') ? undefined : ((json['report'] as Array<any>).map(LocationScanFromJSON)),
    };
}

export function MachineReportListInnerToJSON(value?: MachineReportListInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'report_name': value.reportName,
        'report': value.report === undefined ? undefined : ((value.report as Array<any>).map(LocationScanToJSON)),
    };
}

