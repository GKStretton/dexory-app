/* tslint:disable */
/* eslint-disable */
/**
 * Dexory API
 * Dexory platform api for warehouse tracking
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about a specific location scanned by a machine
 * @export
 * @interface LocationScan
 */
export interface LocationScan {
    /**
     * Name of the location
     * @type {string}
     * @memberof LocationScan
     */
    name: string;
    /**
     * Indicates if the location was scanned
     * @type {boolean}
     * @memberof LocationScan
     */
    scanned: boolean;
    /**
     * Indicates if the location is occupied
     * @type {boolean}
     * @memberof LocationScan
     */
    occupied: boolean;
    /**
     * List of detected barcodes in this location
     * @type {Array<string>}
     * @memberof LocationScan
     */
    detectedBarcodes: Array<string>;
}

/**
 * Check if a given object implements the LocationScan interface.
 */
export function instanceOfLocationScan(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "scanned" in value;
    isInstance = isInstance && "occupied" in value;
    isInstance = isInstance && "detectedBarcodes" in value;

    return isInstance;
}

export function LocationScanFromJSON(json: any): LocationScan {
    return LocationScanFromJSONTyped(json, false);
}

export function LocationScanFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationScan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'scanned': json['scanned'],
        'occupied': json['occupied'],
        'detectedBarcodes': json['detected_barcodes'],
    };
}

export function LocationScanToJSON(value?: LocationScan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'scanned': value.scanned,
        'occupied': value.occupied,
        'detected_barcodes': value.detectedBarcodes,
    };
}

