openapi: 3.0.0
info:
  title: Dexory API
  description: Dexory platform api for warehouse tracking
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Dev testing server
  - url: http://localhost:6000
    description: Production build server
paths:
  /generate-comparison:
    post:
      summary: Generate comparison from the given machine report name and this user report
      parameters:
        - name: machine-report-name
          in: query
          required: true
          description: The machine report name to compare the user report with
          schema:
            type: string
      requestBody:
        required: true
        description: The csv data for the user report
        content:
          text/csv:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LocationComparison"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /machine-reports:
    post:
      summary: Uploads a new machine report
      requestBody:
        required: true
        description: The machine report json
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LocationScan"
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Get the list of machine reports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          $ref: '#/components/responses/InternalServerError'


components:
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    BadRequest:
      description: Invalid Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"


  schemas:
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    LocationScan:
      type: object
      description: Information about a specific location scanned by a machine
      properties:
        name:
          type: string
          description: Name of the location
        scanned:
          type: boolean
          description: Indicates if the location was scanned
        occupied:
          type: boolean
          description: Indicates if the location is occupied
        detected_barcodes:
          type: array
          description: List of detected barcodes in this location
          items:
            type: string
      required:
        - name
        - scanned
        - occupied
        - detected_barcodes

    LocationComparison:
      type: object
      properties:
        name:
          type: string
          description: The name of the location
        scanned:
          type: boolean
          description: Whether or not the location was successfully scanned
        occupied:
          type: boolean
          description: Whether or not the location was occupied
        expected_barcodes:
          type: array
          description: The barcodes that were expected to be found in this location
          items:
            type: string
        detected_barcodes:
          type: array
          description: The barcodes that were actually found in this location
          items:
            type: string
        status:
          type: string
          description: The status resulting from the comparison
          enum:
            - Not scanned
            - Empty, as expected
            - Empty, but it should have been occupied
            - Occupied by the expected items
            - Occupied by the wrong items
            - Occupied by an item, but should have been empty
            - Occupied, but no barcode could be identified
      required:
        - name
        - scanned
        - occupied
        - expected_barcodes
        - detected_barcodes
        - status

  